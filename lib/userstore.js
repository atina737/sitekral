const fs=require('fs');const path=require('path');const c=require('crypto');
const USERS_FILE=process.env.USERS_FILE||path.join(__dirname,'..','data','users.json');const A='aes-256-gcm',L=12;
const sk = () => process.env.USERS_ENC_KEY || process.env.SESSION_SECRET || 'YWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXoxMjM0NTY';
const hk=s=>c.createHash('sha256').update(String(s||'')).digest();
const kd=(salt,sec)=>c.scryptSync(String(sec||''),salt,32);
const isEnv=r=>{try{const o=JSON.parse(r);return o&&typeof o==='object'&&o.alg&&o.iv&&o.tag&&o.data}catch{return false}};
const enc=(obj,sec)=>{const s=c.randomBytes(16),k=kd(s,sec),iv=c.randomBytes(L),ch=c.createCipheriv(A,k,iv),pt=Buffer.from(JSON.stringify(obj),'utf8'),ct=Buffer.concat([ch.update(pt),ch.final()]),tg=ch.getAuthTag();return JSON.stringify({v:2,alg:A,iv:iv.toString('base64'),tag:tg.toString('base64'),s:s.toString('base64'),data:ct.toString('base64')})};
const dec=(raw,sec)=>{const o=JSON.parse(raw);if(!o||o.alg!==A||!o.iv||!o.tag||!o.data)throw new Error('bad');const iv=Buffer.from(o.iv,'base64'),tg=Buffer.from(o.tag,'base64'),dt=Buffer.from(o.data,'base64');const k=o.s?kd(Buffer.from(o.s,'base64'),sec):hk(sec);const d=c.createDecipheriv(A,k,iv);d.setAuthTag(tg);const p=Buffer.concat([d.update(dt),d.final()]);return JSON.parse(p.toString('utf8'))};
const rd=f=>{try{return fs.readFileSync(f,'utf8')}catch{return null}};
const wr=arr=>{try{const e=enc(arr,sk());fs.writeFileSync(USERS_FILE,e,{encoding:'utf8',mode:0o600});return true}catch{return false}};
const RU=()=>{const raw=rd(USERS_FILE);if(raw===null)return[];if(isEnv(raw)){try{const u=dec(raw,sk());return Array.isArray(u)?u:[]}catch{return[]}}try{const u=JSON.parse(raw);if(Array.isArray(u)){wr(u);return u}}catch{}return[]};
const find=em=>{if(!em)return null;const u=RU(),x=String(em).toLowerCase();return u.find(z=>(z.email||'').toLowerCase()===x)||null};
const eq=(a,b)=>{const A=Buffer.from(String(a||'')),B=Buffer.from(String(b||''));if(A.length!==B.length)return false;try{return c.timingSafeEqual(A,B)}catch{return false}};
const ver=(e,p)=>{const u=find(e);if(!u)return null;return eq(u.password,p)?u:null};
const findByName=(name)=>{if(!name)return null;const u=RU(),x=String(name).trim();return u.find(z=>(z.name||'').trim()===x)||null};
const verByUsername=(n,p)=>{const u=findByName(n);if(!u)return null;return eq(u.password,p)?u:null};
module.exports={readUsers:RU,findUserByEmail:find,verifyUser:ver,findUserByUsername:findByName,verifyUserByUsername:verByUsername,USERS_FILE,writeEncryptedUsers:wr};